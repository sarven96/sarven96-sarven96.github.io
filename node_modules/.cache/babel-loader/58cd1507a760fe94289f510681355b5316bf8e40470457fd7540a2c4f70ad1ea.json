{"ast":null,"code":"var _jsxFileName = \"/Users/sarven/Documents/image-classification-react/src/components/spinner.js\",\n  _s = $RefreshSig$();\nimport { useState, CSSProperties } from 'react';\nimport HashLoader from 'react-spinners/HashLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = {\n  display: 'block',\n  margin: '0 auto',\n  borderColor: 'black'\n};\nfunction Spinner() {\n  _s();\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState('#ffffff');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: /*#__PURE__*/_jsxDEV(HashLoader, {\n      color: color,\n      loading: loading,\n      cssOverride: override,\n      size: 150,\n      \"aria-label\": \"Loading Spinner\",\n      \"data-testid\": \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Spinner, \"UgapFFqJKAXDY5tkp4Zj+2QOXiE=\");\n_c = Spinner;\nexport default Spinner;\nvar _c;\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"names":["useState","CSSProperties","HashLoader","jsxDEV","_jsxDEV","override","display","margin","borderColor","Spinner","_s","loading","setLoading","color","setColor","className","children","cssOverride","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarven/Documents/image-classification-react/src/components/spinner.js"],"sourcesContent":["import { useState, CSSProperties } from 'react';\nimport HashLoader from 'react-spinners/HashLoader';\n\nconst override = {\n    display: 'block',\n    margin: '0 auto',\n    borderColor: 'black',\n};\n\nfunction Spinner() {\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState('#ffffff');\n\n    return (\n        <div className=\"sweet-loading\">\n            {/* <button onClick={() => setLoading(!loading)}>Toggle Loader</button> */}\n            {/* <input value={color} onChange={(input) => setColor(input.target.value)} placeholder=\"Color of the loader\" /> */}\n\n            <HashLoader\n                color={color}\n                loading={loading}\n                cssOverride={override}\n                size={150}\n                aria-label=\"Loading Spinner\"\n                data-testid=\"loader\"\n            />\n        </div>\n    );\n}\n\nexport default Spinner;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAC/C,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAG;EACbC,OAAO,EAAE,OAAO;EAChBC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE;AACjB,CAAC;AAED,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAI,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAE3C,oBACII,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,eAI1BZ,OAAA,CAACF,UAAU;MACPW,KAAK,EAAEA,KAAM;MACbF,OAAO,EAAEA,OAAQ;MACjBM,WAAW,EAAEZ,QAAS;MACtBa,IAAI,EAAE,GAAI;MACV,cAAW,iBAAiB;MAC5B,eAAY;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAACZ,EAAA,CAnBQD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAqBhB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}